/* tslint:disable */
/* eslint-disable */
/**
 * The Golden Book API
 * API para negocio de venta de libros 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: soporte@thegoldenbook.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LineaPedido } from './LineaPedido';
import {
    LineaPedidoFromJSON,
    LineaPedidoFromJSONTyped,
    LineaPedidoToJSON,
    LineaPedidoToJSONTyped,
} from './LineaPedido';

/**
 * 
 * @export
 * @interface Pedido
 */
export interface Pedido {
    /**
     * 
     * @type {number}
     * @memberof Pedido
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof Pedido
     */
    fechaRealizacion?: Date;
    /**
     * 
     * @type {number}
     * @memberof Pedido
     */
    precio?: number;
    /**
     * 
     * @type {number}
     * @memberof Pedido
     */
    clienteId?: number;
    /**
     * 
     * @type {string}
     * @memberof Pedido
     */
    nickname?: string;
    /**
     * 
     * @type {number}
     * @memberof Pedido
     */
    tipoEstadoPedidoId?: number;
    /**
     * 
     * @type {string}
     * @memberof Pedido
     */
    tipoEstadoPedidoNombre?: string;
    /**
     * 
     * @type {Array<LineaPedido>}
     * @memberof Pedido
     */
    lineas?: Array<LineaPedido>;
}

/**
 * Check if a given object implements the Pedido interface.
 */
export function instanceOfPedido(value: object): value is Pedido {
    return true;
}

export function PedidoFromJSON(json: any): Pedido {
    return PedidoFromJSONTyped(json, false);
}

export function PedidoFromJSONTyped(json: any, ignoreDiscriminator: boolean): Pedido {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'fechaRealizacion': json['fechaRealizacion'] == null ? undefined : (new Date(json['fechaRealizacion'])),
        'precio': json['precio'] == null ? undefined : json['precio'],
        'clienteId': json['clienteId'] == null ? undefined : json['clienteId'],
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'tipoEstadoPedidoId': json['tipoEstadoPedidoId'] == null ? undefined : json['tipoEstadoPedidoId'],
        'tipoEstadoPedidoNombre': json['tipoEstadoPedidoNombre'] == null ? undefined : json['tipoEstadoPedidoNombre'],
        'lineas': json['lineas'] == null ? undefined : ((json['lineas'] as Array<any>).map(LineaPedidoFromJSON)),
    };
}

export function PedidoToJSON(json: any): Pedido {
    return PedidoToJSONTyped(json, false);
}

export function PedidoToJSONTyped(value?: Pedido | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'fechaRealizacion': value['fechaRealizacion'] == null ? undefined : ((value['fechaRealizacion']).toISOString()),
        'precio': value['precio'],
        'clienteId': value['clienteId'],
        'nickname': value['nickname'],
        'tipoEstadoPedidoId': value['tipoEstadoPedidoId'],
        'tipoEstadoPedidoNombre': value['tipoEstadoPedidoNombre'],
        'lineas': value['lineas'] == null ? undefined : ((value['lineas'] as Array<any>).map(LineaPedidoToJSON)),
    };
}

