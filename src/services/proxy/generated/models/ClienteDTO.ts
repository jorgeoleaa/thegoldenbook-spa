/* tslint:disable */
/* eslint-disable */
/**
 * The Golden Book API
 * API para negocio de venta de libros 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: soporte@thegoldenbook.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DireccionDTO } from './DireccionDTO';
import {
    DireccionDTOFromJSON,
    DireccionDTOFromJSONTyped,
    DireccionDTOToJSON,
    DireccionDTOToJSONTyped,
} from './DireccionDTO';

/**
 * 
 * @export
 * @interface ClienteDTO
 */
export interface ClienteDTO {
    /**
     * 
     * @type {number}
     * @memberof ClienteDTO
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ClienteDTO
     */
    nickname?: string;
    /**
     * 
     * @type {string}
     * @memberof ClienteDTO
     */
    nombre?: string;
    /**
     * 
     * @type {string}
     * @memberof ClienteDTO
     */
    apellido1?: string;
    /**
     * 
     * @type {string}
     * @memberof ClienteDTO
     */
    apellido2?: string;
    /**
     * 
     * @type {string}
     * @memberof ClienteDTO
     */
    dniNie?: string;
    /**
     * 
     * @type {string}
     * @memberof ClienteDTO
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof ClienteDTO
     */
    telefono?: string;
    /**
     * 
     * @type {string}
     * @memberof ClienteDTO
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof ClienteDTO
     */
    jwt?: string;
    /**
     * 
     * @type {Array<DireccionDTO>}
     * @memberof ClienteDTO
     */
    direcciones?: Array<DireccionDTO>;
}

/**
 * Check if a given object implements the ClienteDTO interface.
 */
export function instanceOfClienteDTO(value: object): value is ClienteDTO {
    return true;
}

export function ClienteDTOFromJSON(json: any): ClienteDTO {
    return ClienteDTOFromJSONTyped(json, false);
}

export function ClienteDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClienteDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'nombre': json['nombre'] == null ? undefined : json['nombre'],
        'apellido1': json['apellido1'] == null ? undefined : json['apellido1'],
        'apellido2': json['apellido2'] == null ? undefined : json['apellido2'],
        'dniNie': json['dniNie'] == null ? undefined : json['dniNie'],
        'email': json['email'] == null ? undefined : json['email'],
        'telefono': json['telefono'] == null ? undefined : json['telefono'],
        'password': json['password'] == null ? undefined : json['password'],
        'jwt': json['jwt'] == null ? undefined : json['jwt'],
        'direcciones': json['direcciones'] == null ? undefined : ((json['direcciones'] as Array<any>).map(DireccionDTOFromJSON)),
    };
}

export function ClienteDTOToJSON(json: any): ClienteDTO {
    return ClienteDTOToJSONTyped(json, false);
}

export function ClienteDTOToJSONTyped(value?: ClienteDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'nickname': value['nickname'],
        'nombre': value['nombre'],
        'apellido1': value['apellido1'],
        'apellido2': value['apellido2'],
        'dniNie': value['dniNie'],
        'email': value['email'],
        'telefono': value['telefono'],
        'password': value['password'],
        'jwt': value['jwt'],
        'direcciones': value['direcciones'] == null ? undefined : ((value['direcciones'] as Array<any>).map(DireccionDTOToJSON)),
    };
}

