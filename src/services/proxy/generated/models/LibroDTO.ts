/* tslint:disable */
/* eslint-disable */
/**
 * The Golden Book API
 * API para negocio de venta de libros 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: soporte@thegoldenbook.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Autor } from './Autor';
import {
    AutorFromJSON,
    AutorFromJSONTyped,
    AutorToJSON,
    AutorToJSONTyped,
} from './Autor';
import type { Tematica } from './Tematica';
import {
    TematicaFromJSON,
    TematicaFromJSONTyped,
    TematicaToJSON,
    TematicaToJSONTyped,
} from './Tematica';

/**
 * 
 * @export
 * @interface LibroDTO
 */
export interface LibroDTO {
    /**
     * 
     * @type {number}
     * @memberof LibroDTO
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof LibroDTO
     */
    isbn?: string;
    /**
     * 
     * @type {string}
     * @memberof LibroDTO
     */
    nombre?: string;
    /**
     * 
     * @type {Date}
     * @memberof LibroDTO
     */
    fechaPublicacion?: Date;
    /**
     * 
     * @type {string}
     * @memberof LibroDTO
     */
    sinopsis?: string;
    /**
     * 
     * @type {number}
     * @memberof LibroDTO
     */
    valoracionMedia?: number;
    /**
     * 
     * @type {number}
     * @memberof LibroDTO
     */
    unidades?: number;
    /**
     * 
     * @type {number}
     * @memberof LibroDTO
     */
    precio?: number;
    /**
     * 
     * @type {number}
     * @memberof LibroDTO
     */
    generoLiterarioId?: number;
    /**
     * 
     * @type {string}
     * @memberof LibroDTO
     */
    generoLiterarioNombre?: string;
    /**
     * 
     * @type {number}
     * @memberof LibroDTO
     */
    clasificacionEdadId?: number;
    /**
     * 
     * @type {string}
     * @memberof LibroDTO
     */
    clasificacionEdadNombre?: string;
    /**
     * 
     * @type {number}
     * @memberof LibroDTO
     */
    idiomaId?: number;
    /**
     * 
     * @type {string}
     * @memberof LibroDTO
     */
    idiomaNombre?: string;
    /**
     * 
     * @type {number}
     * @memberof LibroDTO
     */
    formatoId?: number;
    /**
     * 
     * @type {string}
     * @memberof LibroDTO
     */
    formatoNombre?: string;
    /**
     * 
     * @type {Array<Autor>}
     * @memberof LibroDTO
     */
    autores?: Array<Autor>;
    /**
     * 
     * @type {Array<Tematica>}
     * @memberof LibroDTO
     */
    tematicas?: Array<Tematica>;
}

/**
 * Check if a given object implements the LibroDTO interface.
 */
export function instanceOfLibroDTO(value: object): value is LibroDTO {
    return true;
}

export function LibroDTOFromJSON(json: any): LibroDTO {
    return LibroDTOFromJSONTyped(json, false);
}

export function LibroDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibroDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'isbn': json['isbn'] == null ? undefined : json['isbn'],
        'nombre': json['nombre'] == null ? undefined : json['nombre'],
        'fechaPublicacion': json['fechaPublicacion'] == null ? undefined : (new Date(json['fechaPublicacion'])),
        'sinopsis': json['sinopsis'] == null ? undefined : json['sinopsis'],
        'valoracionMedia': json['valoracionMedia'] == null ? undefined : json['valoracionMedia'],
        'unidades': json['unidades'] == null ? undefined : json['unidades'],
        'precio': json['precio'] == null ? undefined : json['precio'],
        'generoLiterarioId': json['generoLiterarioId'] == null ? undefined : json['generoLiterarioId'],
        'generoLiterarioNombre': json['generoLiterarioNombre'] == null ? undefined : json['generoLiterarioNombre'],
        'clasificacionEdadId': json['clasificacionEdadId'] == null ? undefined : json['clasificacionEdadId'],
        'clasificacionEdadNombre': json['clasificacionEdadNombre'] == null ? undefined : json['clasificacionEdadNombre'],
        'idiomaId': json['idiomaId'] == null ? undefined : json['idiomaId'],
        'idiomaNombre': json['idiomaNombre'] == null ? undefined : json['idiomaNombre'],
        'formatoId': json['formatoId'] == null ? undefined : json['formatoId'],
        'formatoNombre': json['formatoNombre'] == null ? undefined : json['formatoNombre'],
        'autores': json['autores'] == null ? undefined : ((json['autores'] as Array<any>).map(AutorFromJSON)),
        'tematicas': json['tematicas'] == null ? undefined : ((json['tematicas'] as Array<any>).map(TematicaFromJSON)),
    };
}

export function LibroDTOToJSON(json: any): LibroDTO {
    return LibroDTOToJSONTyped(json, false);
}

export function LibroDTOToJSONTyped(value?: LibroDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'isbn': value['isbn'],
        'nombre': value['nombre'],
        'fechaPublicacion': value['fechaPublicacion'] == null ? undefined : ((value['fechaPublicacion']).toISOString()),
        'sinopsis': value['sinopsis'],
        'valoracionMedia': value['valoracionMedia'],
        'unidades': value['unidades'],
        'precio': value['precio'],
        'generoLiterarioId': value['generoLiterarioId'],
        'generoLiterarioNombre': value['generoLiterarioNombre'],
        'clasificacionEdadId': value['clasificacionEdadId'],
        'clasificacionEdadNombre': value['clasificacionEdadNombre'],
        'idiomaId': value['idiomaId'],
        'idiomaNombre': value['idiomaNombre'],
        'formatoId': value['formatoId'],
        'formatoNombre': value['formatoNombre'],
        'autores': value['autores'] == null ? undefined : ((value['autores'] as Array<any>).map(AutorToJSON)),
        'tematicas': value['tematicas'] == null ? undefined : ((value['tematicas'] as Array<any>).map(TematicaToJSON)),
    };
}

