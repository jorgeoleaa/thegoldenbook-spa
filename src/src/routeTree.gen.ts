/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './../routes/__root'

// Create Virtual Routes

const SingupLazyImport = createFileRoute('/singup')()
const PublicLazyImport = createFileRoute('/public')()
const ProfileLazyImport = createFileRoute('/profile')()
const PedidosLazyImport = createFileRoute('/pedidos')()
const LoginLazyImport = createFileRoute('/login')()
const LibroSearchLazyImport = createFileRoute('/libroSearch')()
const LibroDetailLazyImport = createFileRoute('/libroDetail')()
const ContactLazyImport = createFileRoute('/contact')()
const CartLazyImport = createFileRoute('/cart')()
const AboutusLazyImport = createFileRoute('/aboutus')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SingupLazyRoute = SingupLazyImport.update({
  id: '/singup',
  path: '/singup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/singup.lazy').then((d) => d.Route))

const PublicLazyRoute = PublicLazyImport.update({
  id: '/public',
  path: '/public',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/public.lazy').then((d) => d.Route))

const ProfileLazyRoute = ProfileLazyImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/profile.lazy').then((d) => d.Route))

const PedidosLazyRoute = PedidosLazyImport.update({
  id: '/pedidos',
  path: '/pedidos',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/pedidos.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/login.lazy').then((d) => d.Route))

const LibroSearchLazyRoute = LibroSearchLazyImport.update({
  id: '/libroSearch',
  path: '/libroSearch',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./../routes/libroSearch.lazy').then((d) => d.Route),
)

const LibroDetailLazyRoute = LibroDetailLazyImport.update({
  id: '/libroDetail',
  path: '/libroDetail',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./../routes/libroDetail.lazy').then((d) => d.Route),
)

const ContactLazyRoute = ContactLazyImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/contact.lazy').then((d) => d.Route))

const CartLazyRoute = CartLazyImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/cart.lazy').then((d) => d.Route))

const AboutusLazyRoute = AboutusLazyImport.update({
  id: '/aboutus',
  path: '/aboutus',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/aboutus.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/aboutus': {
      id: '/aboutus'
      path: '/aboutus'
      fullPath: '/aboutus'
      preLoaderRoute: typeof AboutusLazyImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartLazyImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactLazyImport
      parentRoute: typeof rootRoute
    }
    '/libroDetail': {
      id: '/libroDetail'
      path: '/libroDetail'
      fullPath: '/libroDetail'
      preLoaderRoute: typeof LibroDetailLazyImport
      parentRoute: typeof rootRoute
    }
    '/libroSearch': {
      id: '/libroSearch'
      path: '/libroSearch'
      fullPath: '/libroSearch'
      preLoaderRoute: typeof LibroSearchLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/pedidos': {
      id: '/pedidos'
      path: '/pedidos'
      fullPath: '/pedidos'
      preLoaderRoute: typeof PedidosLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/public': {
      id: '/public'
      path: '/public'
      fullPath: '/public'
      preLoaderRoute: typeof PublicLazyImport
      parentRoute: typeof rootRoute
    }
    '/singup': {
      id: '/singup'
      path: '/singup'
      fullPath: '/singup'
      preLoaderRoute: typeof SingupLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/aboutus': typeof AboutusLazyRoute
  '/cart': typeof CartLazyRoute
  '/contact': typeof ContactLazyRoute
  '/libroDetail': typeof LibroDetailLazyRoute
  '/libroSearch': typeof LibroSearchLazyRoute
  '/login': typeof LoginLazyRoute
  '/pedidos': typeof PedidosLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/public': typeof PublicLazyRoute
  '/singup': typeof SingupLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/aboutus': typeof AboutusLazyRoute
  '/cart': typeof CartLazyRoute
  '/contact': typeof ContactLazyRoute
  '/libroDetail': typeof LibroDetailLazyRoute
  '/libroSearch': typeof LibroSearchLazyRoute
  '/login': typeof LoginLazyRoute
  '/pedidos': typeof PedidosLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/public': typeof PublicLazyRoute
  '/singup': typeof SingupLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/aboutus': typeof AboutusLazyRoute
  '/cart': typeof CartLazyRoute
  '/contact': typeof ContactLazyRoute
  '/libroDetail': typeof LibroDetailLazyRoute
  '/libroSearch': typeof LibroSearchLazyRoute
  '/login': typeof LoginLazyRoute
  '/pedidos': typeof PedidosLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/public': typeof PublicLazyRoute
  '/singup': typeof SingupLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/aboutus'
    | '/cart'
    | '/contact'
    | '/libroDetail'
    | '/libroSearch'
    | '/login'
    | '/pedidos'
    | '/profile'
    | '/public'
    | '/singup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/aboutus'
    | '/cart'
    | '/contact'
    | '/libroDetail'
    | '/libroSearch'
    | '/login'
    | '/pedidos'
    | '/profile'
    | '/public'
    | '/singup'
  id:
    | '__root__'
    | '/'
    | '/aboutus'
    | '/cart'
    | '/contact'
    | '/libroDetail'
    | '/libroSearch'
    | '/login'
    | '/pedidos'
    | '/profile'
    | '/public'
    | '/singup'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutusLazyRoute: typeof AboutusLazyRoute
  CartLazyRoute: typeof CartLazyRoute
  ContactLazyRoute: typeof ContactLazyRoute
  LibroDetailLazyRoute: typeof LibroDetailLazyRoute
  LibroSearchLazyRoute: typeof LibroSearchLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
  PedidosLazyRoute: typeof PedidosLazyRoute
  ProfileLazyRoute: typeof ProfileLazyRoute
  PublicLazyRoute: typeof PublicLazyRoute
  SingupLazyRoute: typeof SingupLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutusLazyRoute: AboutusLazyRoute,
  CartLazyRoute: CartLazyRoute,
  ContactLazyRoute: ContactLazyRoute,
  LibroDetailLazyRoute: LibroDetailLazyRoute,
  LibroSearchLazyRoute: LibroSearchLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  PedidosLazyRoute: PedidosLazyRoute,
  ProfileLazyRoute: ProfileLazyRoute,
  PublicLazyRoute: PublicLazyRoute,
  SingupLazyRoute: SingupLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/aboutus",
        "/cart",
        "/contact",
        "/libroDetail",
        "/libroSearch",
        "/login",
        "/pedidos",
        "/profile",
        "/public",
        "/singup"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/aboutus": {
      "filePath": "aboutus.lazy.tsx"
    },
    "/cart": {
      "filePath": "cart.lazy.tsx"
    },
    "/contact": {
      "filePath": "contact.lazy.tsx"
    },
    "/libroDetail": {
      "filePath": "libroDetail.lazy.tsx"
    },
    "/libroSearch": {
      "filePath": "libroSearch.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/pedidos": {
      "filePath": "pedidos.lazy.tsx"
    },
    "/profile": {
      "filePath": "profile.lazy.tsx"
    },
    "/public": {
      "filePath": "public.lazy.tsx"
    },
    "/singup": {
      "filePath": "singup.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
